# .github/workflows/build_wheel.yml
name: Build Python Wheels

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [published]
  workflow_dispatch:          # 允许手动触发

jobs:
  build_wheels:
    name: Build wheel on ${{ matrix.os }} / Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.12"]

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      # 安装 Python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # 升级基础工具
      - name: Install build tools
        run: |
          python -m pip install --upgrade pip build twine

      # 构建 wheel 与源码包
      - name: Build wheel
        run: python -m build

      # 校验 wheel 与 tar.gz 是否 OK
      - name: Check dists
        run: twine check dist/*

      # 上传构件
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.python-version }}
          path: dist/*
          retention-days: 90

  # 仅在 Release 发布时执行上传
  upload_pypi:
    name: Upload to PyPI
    runs-on: ubuntu-latest
    needs: build_wheels
    if: github.event_name == 'release' && github.event.action == 'published'
    environment:
      name: pypi
      url: https://pypi.org/p/<YOUR_PACKAGE_NAME>
    permissions:
      id-token: write  # 使用 OIDC 方式上传，无需额外 token
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: dist-*
          merge-multiple: true
          path: dist

      # 使用官方 PyPI 上传动作（OIDC，无需 PYPI_API_TOKEN）
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
